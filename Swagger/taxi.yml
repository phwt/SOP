swagger: "2.0"
info:
  description: "Service Oriented Programming - Workshop 1"
  version: "1.0.0"
  title: "Taxi System"
host: "example.com"
basePath: "/taxi"

tags:
- name: "payment"
  description: "Sending and receiving payment from/to driver and passenger"
- name: "tracking"
  description: "Tracking driver vehicle on route - safety features"
- name: "vehicle"
  description: ""
- name: "messaging"
  description: "Communication between driver and passenger"
- name: "location"
  description: "Tracking the location of nearby drivers"
- name: "customer"
  description: "For customer to search and grab a ride, manage their destinations"
- name: "feedback"
  description: "Driver and passenger provide feedback and rating to each other"
- name: "promotion"
  description: "Promotional information to passenger"
- name: "driver"
  description: "For driver to accept a passenger"

schemes:
- "https"
- "http"

paths:
  /payment/estimate:
    post:
      tags:
      - "payment"
      summary: "Calculate fare estimation for this route"
      description: ""
      operationId: ""
      parameters:
      - in: "body"
        name: "body"
        description: "Route object to be calculated"
        required: true
        schema:
          type: "object"
          required:
          - "name"
          - "photoUrls"
          properties:
            from:
              $ref: "#/definitions/Coordinates"
            to:
              $ref: "#/definitions/Coordinates"
      responses:
        "200":
          description: "Estimated fare in THB"
          schema:
            type: "number"
            format: "float"
            example: 120.25
        "400":
          description: "Invalid input"

  /payment/:
    post:
      tags:
      - "payment"
      summary: "Send a payment to driver"
      description: ""
      operationId: ""
      parameters:
      - in: "body"
        name: "body"
        description: "Route object to be calculated"
        required: true
        schema:
          type: "object"
          required:
          - "name"
          - "photoUrls"
          properties:
            driver:
              $ref: "#/definitions/Driver"
            passenger:
              $ref: "#/definitions/Passenger"
            fare:
              type: "number"
              format: "float"
              example: 140.24
      responses:
        "200":
          description: "Payment received by driver"
        "400":
          description: "Invalid input"

  /payment/method/:
    post:
      tags:
      - "payment"
      summary: "Add payment method"
      parameters:
        - in: "body"
          name: "body"
          description: "Updated method"
          required: true
          schema:
            $ref: "#/definitions/Payment"
      responses:
        "200":
          description: "successful operation"

  /payment/method/{methodId}:
    get:
      tags:
      - "payment"
      summary: "Get a payment method"
      parameters:
        - name: "methodId"
          in: path
          description: "ID of payment method to fetch"
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Payment"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Method not found"
    put:
      tags:
      - "payment"
      summary: "Update payment method"
      parameters:
        - name: "methodId"
          in: path
          description: "ID of payment method to update"
          required: true
          type: integer
          format: int64
        - in: "body"
          name: "body"
          description: "Updated method"
          required: true
          schema:
            $ref: "#/definitions/Payment"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Method not found"
    delete:
      tags:
      - "payment"
      summary: "Delete payment method"
      parameters:
        - name: "methodId"
          in: path
          description: "ID of payment method to delete"
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Method not found"
  
  /tracking:
    post:
      tags:
      - "tracking"
      summary: "Get driver current location"
      description: ""
      operationId: ""
      parameters:
      - in: "body"
        name: "body"
        description: "Driver's object"
        required: true
        schema:
          $ref: "#/definitions/Driver"
      responses:
        "200":
          description: "Vehicle's current location"
          schema:
            $ref: "#/definitions/Coordinates"

definitions:
  Payment:
    type: "object"
    properties:
      id:
        type: "number"
        format: "integer"
        description: "Passenger's saved payment method"
        example: 45
      method:
        type: "string"
        enum:
        - "credit_card"
        - "online_banking"
  Driver:
    type: "object"
    properties:
      id:
        type: "number"
        format: "integer"
        example: 1
      vehicle_id:
        type: "number"
        format: "integer"
        example: 22
  Passenger:
    type: "object"
    properties:
      id:
        type: "number"
        format: "integer"
        example: 221
      payment:
        $ref: "#/definitions/Payment"
  Coordinates:
    type: "object"
    properties:
      lat:
        type: "number"
        format: "double"
        example: 13.730275
      lon:
        type: "number"
        format: "double"
        example: 100.780140
