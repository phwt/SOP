swagger: "2.0"
info:
  description: "Service Oriented Programming - Workshop 1"
  version: "1.0.0"
  title: "Taxi System"
host: "example.com"
basePath: "/taxi"

tags:
  - name: "payment"
    description: "Sending and receiving payment from/to driver and passenger"
  - name: "tracking"
    description: "Tracking driver vehicle on route - safety features"
  - name: "vehicle"
    description: ""
  - name: "messaging"
    description: "Communication between driver and passenger"
  - name: "location"
    description: "Tracking the location of nearby drivers"
  - name: "customer"
    description: "For customer to search and grab a ride, manage their destinations"
  - name: "feedback"
    description: "Driver and passenger provide feedback and rating to each other"
  - name: "promotion"
    description: "Promotional information to passenger"
  - name: "driver"
    description: "For driver to accept a passenger"

schemes:
  - "https"
  - "http"

paths:
  /payment/estimate:
    post:
      tags:
        - "payment"
      summary: "Calculate fare estimation for this route"
      description: ""
      operationId: ""
      parameters:
        - in: "body"
          name: "body"
          description: "Route object to be calculated"
          required: true
          schema:
            type: "object"
            required:
              - "name"
              - "photoUrls"
            properties:
              from:
                $ref: "#/definitions/Coordinates"
              to:
                $ref: "#/definitions/Coordinates"
      responses:
        "200":
          description: "Estimated fare in THB"
          schema:
            type: "number"
            format: "float"
            example: 120.25
        "400":
          description: "Invalid input"

  /payment/:
    post:
      tags:
        - "payment"
      summary: "Send a payment to driver"
      description: ""
      operationId: ""
      parameters:
        - in: "body"
          name: "body"
          description: "Route object to be calculated"
          required: true
          schema:
            type: "object"
            required:
              - "name"
              - "photoUrls"
            properties:
              driver:
                $ref: "#/definitions/Driver"
              passenger:
                $ref: "#/definitions/Passenger"
              fare:
                type: "number"
                format: "float"
                example: 140.24
      responses:
        "200":
          description: "Payment received by driver"
        "400":
          description: "Invalid input"

  /payment/method/:
    post:
      tags:
        - "payment"
      summary: "Add payment method"
      parameters:
        - in: "body"
          name: "body"
          description: "Updated method"
          required: true
          schema:
            $ref: "#/definitions/Payment"
      responses:
        "200":
          description: "successful operation"

  /payment/method/{methodId}:
    get:
      tags:
        - "payment"
      summary: "Get a payment method"
      parameters:
        - name: "methodId"
          in: path
          description: "ID of payment method to fetch"
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Payment"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Method not found"
    put:
      tags:
        - "payment"
      summary: "Update payment method"
      parameters:
        - name: "methodId"
          in: path
          description: "ID of payment method to update"
          required: true
          type: integer
          format: int64
        - in: "body"
          name: "body"
          description: "Updated method"
          required: true
          schema:
            $ref: "#/definitions/Payment"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Method not found"
    delete:
      tags:
        - "payment"
      summary: "Delete payment method"
      parameters:
        - name: "methodId"
          in: path
          description: "ID of payment method to delete"
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Method not found"

  /tracking:
    post:
      tags:
        - "tracking"
      summary: "Get driver current location"
      description: ""
      operationId: ""
      parameters:
        - in: "body"
          name: "body"
          description: "Driver's object"
          required: true
          schema:
            $ref: "#/definitions/Driver"
      responses:
        "200":
          description: "Vehicle's current location"
          schema:
            $ref: "#/definitions/Coordinates"

  /vehicle:
    post:
      tags:
        - "vehicle"
      summary: "Add vehicle"
      parameters:
        - in: "body"
          name: "body"
          description: "Vehicle info"
          required: true
          schema:
            $ref: "#/definitions/Vehicle"
      responses:
        "200":
          description: "successful operation"

  /vehicle/{vehicleId}:
    get:
      tags:
        - "vehicle"
      summary: "Get a vehicle"
      parameters:
        - name: "vehicleId"
          in: path
          description: "ID of vehicle to fetch"
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Vehicle"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Vehicle not found"
    put:
      tags:
        - "vehicle"
      summary: "Update vehicle method"
      parameters:
        - name: "vehicleId"
          in: path
          description: "ID of vehicle to update"
          required: true
          type: integer
          format: int64
        - in: "body"
          name: "body"
          description: "Updated vehicle info"
          required: true
          schema:
            $ref: "#/definitions/Vehicle"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Vehicle not found"
    delete:
      tags:
        - "vehicle"
      summary: "Delete vehicle"
      parameters:
        - name: "vehicleId"
          in: path
          description: "ID of vehicle to delete"
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Vehicle not found"
  /messaging/{receiverId}:
    post:
      tags:
        - "messaging"
      summary:
        "Send message to driver/passenger"
        # summary: "Communication between driver and passenger"
      parameters:
        - name: "receiverId"
          in: path
          description: "ID of receiver"
          required: true
          type: integer
        - name: "body"
          in: body
          description: "Message"
          required: true
          schema:
            type: "string"
            example: Hi There
      responses:
        "200":
          description: "Send message Successful"
          schema:
            type: "string"
            format: "string"
            example: Send message Successful
        "400":
          description: "Invalid input"
    get:
      tags:
        - "messaging"
      summary: "Receive message to driver/passenger"
      parameters:
        - name: "receiverId"
          in: path
          description: "Message to driver/passenger"
          required: true
          type: integer
      responses:
        "200":
          description: "Receive message Successful"
          schema:
            type: "string"
            format: "string"
            example: Successful Receive message from driver/passenger
        "400":
          description: "Invalid input"

  /rating/:
    post:
      tags:
        - "feedback"
      summary: "Rate driver"
      description: ""
      operationId: ""
      parameters:
        - in: "body"
          name: "body"
          description: "Updated method"
          required: true
          schema:
            type: "object"
            properties:
              driverId:
                type: string
                enum:
                  - "97859"
              rating:
                type: integer
                enum:
                  - 5

      responses:
        "200":
          description: " Rate Added"
        "400":
          description: "Invalid ID supplied"

  /rating/{driverId}:
    post:
      tags:
        - "feedback"
      summary: "View driver rating"
      description: ""
      operationId: ""
      parameters:
        - name: "driverId"
          in: "path"
          description: "ID of Driver"
          required: true
          type: "integer"
          format: "int64"

      responses:
        "200":
          description: " Passenger Accepted"
          schema:
            type: "object"
            properties:
              rating:
                type: integer
                enum:
                  - 5
        "400":
          description: "Invalid ID supplied"

  /promotion/:
    post:
      tags:
        - "promotion"
      summary: "Add promotion"
      description: ""
      operationId: ""
      parameters:
        - in: "body"
          name: "body"
          description: "Promotion object"
          required: true
          schema:
            $ref: "#/definitions/Promotions"
      responses:
        "200":
          description: "Promotion Added"
          schema:
            $ref: "#/definitions/Promotions"

  /promotion/{promotionId}:
    get:
      tags:
        - "promotion"
      summary: "Get promotion"
      description: ""
      operationId: ""
      parameters:
        - name: "promotionId"
          in: "path"
          description: "Promotion object"
          required: true
          type: "integer"
          format: "int64"

      responses:
        "200":
          description: "Promotion Information"
          schema:
            $ref: "#/definitions/Promotions"

  /driver/accept/{passengerId}:
    post:
      tags:
        - "driver"
      summary: "Accept passenger"
      description: ""
      operationId: ""
      parameters:
        - name: "passengerId"
          in: "path"
          description: "ID of Passenger"
          required: true
          type: "integer"
          format: "int64"

      responses:
        "200":
          description: " Passenger Accepted"
        "400":
          description: "Invalid ID supplied"

  /driver/reject/{passengerId}:
    post:
      tags:
        - "driver"
      summary: "Reject passenger"
      description: ""
      operationId: ""
      parameters:
        - name: "passengerId"
          in: "path"
          description: "ID of Passenger"
          required: true
          type: "integer"
          format: "int64"

      responses:
        "200":
          description: " Passenger Accepted"
        "400":
          description: "Invalid ID supplied"

  /location/:
    post:
      tags:
        - "location"
      summary: "Get nearby drivers location"
      parameters:
        - in: "body"
          name: "body"
          description: "Route object to be calculated"
          required: true
          schema:
            $ref: "#/definitions/Coordinates"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/DriverCoordinates"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Method not found"

  /location/{driverId}:
    post:
      tags:
        - "location"
      summary: "Get nearby drivers location"
      parameters:
        - name: "driverId"
          in: path
          description: "ID of driver"
          required: true
          type: integer
          format: int64
        - in: "body"
          name: "body"
          description: "Route object to be calculated"
          required: true
          schema:
            $ref: "#/definitions/Coordinates"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Method not found"

  /customer/destination:
    post:
      tags:
        - "customer"
      summary: "Add destination"
      parameters:
        - in: "body"
          name: "body"
          description: "destination info"
          required: true
          schema:
            $ref: "#/definitions/Destination"
      responses:
        "200":
          description: "successful operation"

  /customer/destination/{destinationId}:
    get:
      tags:
        - "customer"
      summary: "Get a destination"
      parameters:
        - name: "destinationId"
          in: path
          description: "ID of destination to fetch"
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Destination"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "destination not found"
    put:
      tags:
        - "customer"
      summary: "Update destination method"
      parameters:
        - name: "destinationId"
          in: path
          description: "ID of destination to update"
          required: true
          type: integer
          format: int64
        - in: "body"
          name: "body"
          description: "Updated destination info"
          required: true
          schema:
            $ref: "#/definitions/Destination"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "destination not found"
    delete:
      tags:
        - "customer"
      summary: "Delete destination"
      parameters:
        - name: "destinationId"
          in: path
          description: "ID of destination to delete"
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "destination not found"

definitions:
  Payment:
    type: "object"
    properties:
      id:
        type: "number"
        format: "integer"
        description: "Passenger's saved payment method"
        example: 45
      method:
        type: "string"
        enum:
          - "credit_card"
          - "online_banking"
  Driver:
    type: "object"
    properties:
      id:
        type: "number"
        format: "integer"
        example: 1
      vehicle_id:
        type: "number"
        format: "integer"
        example: 22
  Passenger:
    type: "object"
    properties:
      id:
        type: "number"
        format: "integer"
        example: 221
      payment:
        $ref: "#/definitions/Payment"
  Coordinates:
    type: "object"
    properties:
      lat:
        type: "number"
        format: "double"
        example: 13.730275
      lon:
        type: "number"
        format: "double"
        example: 100.780140
  Vehicle:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Toyota"
      type:
        type: "string"
        example: "4 wheel"
  Promotions:
    type: "object"
    properties:
      id:
        type: "number"
        format: "integer"
        example: 1
      message:
        type: "string"
        format: "string"
        description: "Promotion saved"
        example: "Buy 2 get 1 free"
  DriverCoordinates:
    type: "object"
    properties:
      lat:
        type: "number"
        format: "double"
        example: 13.730275
      lon:
        type: "number"
        format: "double"
        example: 100.780140
      driver:
        $ref: "#/definitions/Driver"
  Destination:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Home"
      lat:
        type: "number"
        format: "double"
        example: 13.730275
      lon:
        type: "number"
        format: "double"
        example: 100.780140
